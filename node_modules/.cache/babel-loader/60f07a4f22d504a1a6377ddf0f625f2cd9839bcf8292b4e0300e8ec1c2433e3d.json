{"ast":null,"code":"import React,{Component}from'react';import CardList from'../components/CardList';import SearchBox from'../components/SearchBox';import Scroll from'../components/Scroll';import'tachyons';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";class App extends Component{constructor(){super();this.onSearchChange=event=>{this.setState({searchfield:event.target.value});};this.state={robots:[],searchfield:''};}componentDidMount(){fetch(\"https://jsonplaceholder.typicode.com/users\").then(response=>response.json()).then(users=>this.setState({robots:users}));}render(){const{robots,searchfield}=this.state;const filteredRobots=robots.filter(robot=>{return robot.name.toLowerCase().includes(searchfield.toLowerCase());});return!robots.length?/*#__PURE__*/_jsx(\"h1\",{children:\"Loading\"}):/*#__PURE__*/_jsxs(\"div\",{className:\"tc\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"f1\",children:\"Robocops\"}),/*#__PURE__*/_jsx(SearchBox,{searchChange:this.onSearchChange}),/*#__PURE__*/_jsx(Scroll,{children:/*#__PURE__*/_jsx(CardList,{robots:filteredRobots})})]});}}export default App;","map":{"version":3,"names":["React","Component","CardList","SearchBox","Scroll","jsx","_jsx","jsxs","_jsxs","App","constructor","onSearchChange","event","setState","searchfield","target","value","state","robots","componentDidMount","fetch","then","response","json","users","render","filteredRobots","filter","robot","name","toLowerCase","includes","length","children","className","searchChange"],"sources":["/Users/jessicalongane/Documents/robocops/src/containers/App.js"],"sourcesContent":["import React, { Component } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport 'tachyons';\n\nclass App extends Component {\n  constructor () {\n    super ();\n    this.state = {\n      robots:[],\n      searchfield:''\n    }\n  }\n\n  componentDidMount (){\n    fetch(`https://jsonplaceholder.typicode.com/users`)\n      .then(response => response.json())\n      .then(users =>this.setState({robots:users}));\n  }\n\n  onSearchChange = (event) => {\n    this.setState({searchfield: event.target.value})\n  }\n  \n  render () {\n    const { robots, searchfield } = this.state;\n    const filteredRobots = robots.filter(robot => {\n      return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n    })\n    return !robots.length ?\n      <h1>Loading</h1> :\n       (\n        <div className='tc'>\n        <h1 className='f1'>Robocops</h1>\n        <SearchBox searchChange={this.onSearchChange} />\n        <Scroll>\n          <CardList robots={filteredRobots} />\n        </Scroll>\n        </div>\n      );\n  }\n}\nexport default App;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,KAAQ,OAAO,CACxC,MAAO,CAAAC,QAAQ,KAAM,wBAAwB,CAC7C,MAAO,CAAAC,SAAS,KAAM,yBAAyB,CAC/C,MAAO,CAAAC,MAAM,KAAM,sBAAsB,CACzC,MAAO,UAAU,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAElB,KAAM,CAAAC,GAAG,QAAS,CAAAR,SAAU,CAC1BS,WAAWA,CAAA,CAAI,CACb,KAAK,CAAE,CAAC,CAAC,KAaXC,cAAc,CAAIC,KAAK,EAAK,CAC1B,IAAI,CAACC,QAAQ,CAAC,CAACC,WAAW,CAAEF,KAAK,CAACG,MAAM,CAACC,KAAK,CAAC,CAAC,CAClD,CAAC,CAdC,IAAI,CAACC,KAAK,CAAG,CACXC,MAAM,CAAC,EAAE,CACTJ,WAAW,CAAC,EACd,CAAC,CACH,CAEAK,iBAAiBA,CAAA,CAAG,CAClBC,KAAK,6CAA6C,CAAC,CAChDC,IAAI,CAACC,QAAQ,EAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,KAAK,EAAG,IAAI,CAACX,QAAQ,CAAC,CAACK,MAAM,CAACM,KAAK,CAAC,CAAC,CAAC,CAChD,CAMAC,MAAMA,CAAA,CAAI,CACR,KAAM,CAAEP,MAAM,CAAEJ,WAAY,CAAC,CAAG,IAAI,CAACG,KAAK,CAC1C,KAAM,CAAAS,cAAc,CAAGR,MAAM,CAACS,MAAM,CAACC,KAAK,EAAI,CAC5C,MAAO,CAAAA,KAAK,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACjB,WAAW,CAACgB,WAAW,CAAC,CAAC,CAAC,CACrE,CAAC,CAAC,CACF,MAAO,CAACZ,MAAM,CAACc,MAAM,cACnB1B,IAAA,OAAA2B,QAAA,CAAI,SAAO,CAAI,CAAC,cAEdzB,KAAA,QAAK0B,SAAS,CAAC,IAAI,CAAAD,QAAA,eACnB3B,IAAA,OAAI4B,SAAS,CAAC,IAAI,CAAAD,QAAA,CAAC,UAAQ,CAAI,CAAC,cAChC3B,IAAA,CAACH,SAAS,EAACgC,YAAY,CAAE,IAAI,CAACxB,cAAe,CAAE,CAAC,cAChDL,IAAA,CAACF,MAAM,EAAA6B,QAAA,cACL3B,IAAA,CAACJ,QAAQ,EAACgB,MAAM,CAAEQ,cAAe,CAAE,CAAC,CAC9B,CAAC,EACJ,CACN,CACL,CACF,CACA,cAAe,CAAAjB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}